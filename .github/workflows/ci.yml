# This is a basic workflow to help you get started with Actions

name: go-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    name:  Test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432
        ##options are for futher steps to know when postgres is started..
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set Up Go 1.x
        uses: actions/setup-go@v2
      ##paramter for the above run command
        with:
          go-version: ^1.21
      ###id of this step
        id: go

      # Runs a set of commands using the runners shell
      - name: Check Out Code into the Go Module directory
        uses: actions/checkout@v2
      - name: install migrate pkg to run migrate command on runner machine
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.darwin-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin
          which migrate
      - name: Run migrations
        run: gmake migrateup
      - name: Test
        run: gmake test
